<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: MarketDataFeedV3.proto

namespace Com\Upstox\Marketdatafeederv3udapi\Rpc\Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>com.upstox.marketdatafeederv3udapi.rpc.proto.FirstLevelWithGreeks</code>
 */
class FirstLevelWithGreeks extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.com.upstox.marketdatafeederv3udapi.rpc.proto.LTPC ltpc = 1;</code>
     */
    protected $ltpc = null;
    /**
     * Generated from protobuf field <code>.com.upstox.marketdatafeederv3udapi.rpc.proto.Quote firstDepth = 2;</code>
     */
    protected $firstDepth = null;
    /**
     * Generated from protobuf field <code>.com.upstox.marketdatafeederv3udapi.rpc.proto.OptionGreeks optionGreeks = 3;</code>
     */
    protected $optionGreeks = null;
    /**
     *volume traded today
     *
     * Generated from protobuf field <code>int64 vtt = 4;</code>
     */
    protected $vtt = 0;
    /**
     *open interest
     *
     * Generated from protobuf field <code>double oi = 5;</code>
     */
    protected $oi = 0.0;
    /**
     *implied volatility 
     *
     * Generated from protobuf field <code>double iv = 6;</code>
     */
    protected $iv = 0.0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Com\Upstox\Marketdatafeederv3udapi\Rpc\Proto\LTPC $ltpc
     *     @type \Com\Upstox\Marketdatafeederv3udapi\Rpc\Proto\Quote $firstDepth
     *     @type \Com\Upstox\Marketdatafeederv3udapi\Rpc\Proto\OptionGreeks $optionGreeks
     *     @type int|string $vtt
     *          volume traded today
     *     @type float $oi
     *          open interest
     *     @type float $iv
     *          implied volatility 
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\MarketDataFeedV3::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.com.upstox.marketdatafeederv3udapi.rpc.proto.LTPC ltpc = 1;</code>
     * @return \Com\Upstox\Marketdatafeederv3udapi\Rpc\Proto\LTPC|null
     */
    public function getLtpc()
    {
        return $this->ltpc;
    }

    public function hasLtpc()
    {
        return isset($this->ltpc);
    }

    public function clearLtpc()
    {
        unset($this->ltpc);
    }

    /**
     * Generated from protobuf field <code>.com.upstox.marketdatafeederv3udapi.rpc.proto.LTPC ltpc = 1;</code>
     * @param \Com\Upstox\Marketdatafeederv3udapi\Rpc\Proto\LTPC $var
     * @return $this
     */
    public function setLtpc($var)
    {
        GPBUtil::checkMessage($var, \Com\Upstox\Marketdatafeederv3udapi\Rpc\Proto\LTPC::class);
        $this->ltpc = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.com.upstox.marketdatafeederv3udapi.rpc.proto.Quote firstDepth = 2;</code>
     * @return \Com\Upstox\Marketdatafeederv3udapi\Rpc\Proto\Quote|null
     */
    public function getFirstDepth()
    {
        return $this->firstDepth;
    }

    public function hasFirstDepth()
    {
        return isset($this->firstDepth);
    }

    public function clearFirstDepth()
    {
        unset($this->firstDepth);
    }

    /**
     * Generated from protobuf field <code>.com.upstox.marketdatafeederv3udapi.rpc.proto.Quote firstDepth = 2;</code>
     * @param \Com\Upstox\Marketdatafeederv3udapi\Rpc\Proto\Quote $var
     * @return $this
     */
    public function setFirstDepth($var)
    {
        GPBUtil::checkMessage($var, \Com\Upstox\Marketdatafeederv3udapi\Rpc\Proto\Quote::class);
        $this->firstDepth = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.com.upstox.marketdatafeederv3udapi.rpc.proto.OptionGreeks optionGreeks = 3;</code>
     * @return \Com\Upstox\Marketdatafeederv3udapi\Rpc\Proto\OptionGreeks|null
     */
    public function getOptionGreeks()
    {
        return $this->optionGreeks;
    }

    public function hasOptionGreeks()
    {
        return isset($this->optionGreeks);
    }

    public function clearOptionGreeks()
    {
        unset($this->optionGreeks);
    }

    /**
     * Generated from protobuf field <code>.com.upstox.marketdatafeederv3udapi.rpc.proto.OptionGreeks optionGreeks = 3;</code>
     * @param \Com\Upstox\Marketdatafeederv3udapi\Rpc\Proto\OptionGreeks $var
     * @return $this
     */
    public function setOptionGreeks($var)
    {
        GPBUtil::checkMessage($var, \Com\Upstox\Marketdatafeederv3udapi\Rpc\Proto\OptionGreeks::class);
        $this->optionGreeks = $var;

        return $this;
    }

    /**
     *volume traded today
     *
     * Generated from protobuf field <code>int64 vtt = 4;</code>
     * @return int|string
     */
    public function getVtt()
    {
        return $this->vtt;
    }

    /**
     *volume traded today
     *
     * Generated from protobuf field <code>int64 vtt = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setVtt($var)
    {
        GPBUtil::checkInt64($var);
        $this->vtt = $var;

        return $this;
    }

    /**
     *open interest
     *
     * Generated from protobuf field <code>double oi = 5;</code>
     * @return float
     */
    public function getOi()
    {
        return $this->oi;
    }

    /**
     *open interest
     *
     * Generated from protobuf field <code>double oi = 5;</code>
     * @param float $var
     * @return $this
     */
    public function setOi($var)
    {
        GPBUtil::checkDouble($var);
        $this->oi = $var;

        return $this;
    }

    /**
     *implied volatility 
     *
     * Generated from protobuf field <code>double iv = 6;</code>
     * @return float
     */
    public function getIv()
    {
        return $this->iv;
    }

    /**
     *implied volatility 
     *
     * Generated from protobuf field <code>double iv = 6;</code>
     * @param float $var
     * @return $this
     */
    public function setIv($var)
    {
        GPBUtil::checkDouble($var);
        $this->iv = $var;

        return $this;
    }

}

