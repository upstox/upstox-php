<?php
/**
 * OrderBookDataTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Upstox\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Upstox Developer API
 *
 * Build your App on the Upstox platform  ![Banner](https://api-v2.upstox.com/api-docs/images/banner.jpg \"banner\")  # Introduction  Upstox API is a set of rest APIs that provide data required to build a complete investment and trading platform. Execute orders in real time, manage user portfolio, stream live market data (using Websocket), and more, with the easy to understand API collection.  All requests are over HTTPS and the requests are sent with the content-type ‘application/json’. Developers have the option of choosing the response type as JSON or CSV for a few API calls.  To be able to use these APIs you need to create an App in the Developer Console and generate your **apiKey** and **apiSecret**. You can use a redirect URL which will be called after the login flow.  If you are a **trader**, you can directly create apps from Upstox mobile app or the desktop platform itself from **Apps** sections inside the **Account** Tab. Head over to <a href=\"http://account.upstox.com/developer/apps\" target=\"_blank\">account.upstox.com/developer/apps</a>.</br> If you are a **business** looking to integrate Upstox APIs, reach out to us and we will get a custom app created for you in no time.  It is highly recommended that you do not embed the **apiSecret** in your frontend app. Create a remote backend which does the handshake on behalf of the frontend app. Marking the apiSecret in the frontend app will make your app vulnerable to threats and potential issues.
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.46
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Upstox\Client;

use PHPUnit\Framework\TestCase;

/**
 * OrderBookDataTest Class Doc Comment
 *
 * @category    Class
 * @description Response data for order Book
 * @package     Upstox\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class OrderBookDataTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "OrderBookData"
     */
    public function testOrderBookData()
    {
    }

    /**
     * Test attribute "exchange"
     */
    public function testPropertyExchange()
    {
    }

    /**
     * Test attribute "product"
     */
    public function testPropertyProduct()
    {
    }

    /**
     * Test attribute "price"
     */
    public function testPropertyPrice()
    {
    }

    /**
     * Test attribute "quantity"
     */
    public function testPropertyQuantity()
    {
    }

    /**
     * Test attribute "status"
     */
    public function testPropertyStatus()
    {
    }

    /**
     * Test attribute "guid"
     */
    public function testPropertyGuid()
    {
    }

    /**
     * Test attribute "tag"
     */
    public function testPropertyTag()
    {
    }

    /**
     * Test attribute "instrument_token"
     */
    public function testPropertyInstrumentToken()
    {
    }

    /**
     * Test attribute "placed_by"
     */
    public function testPropertyPlacedBy()
    {
    }

    /**
     * Test attribute "tradingsymbol"
     */
    public function testPropertyTradingsymbol()
    {
    }

    /**
     * Test attribute "order_type"
     */
    public function testPropertyOrderType()
    {
    }

    /**
     * Test attribute "validity"
     */
    public function testPropertyValidity()
    {
    }

    /**
     * Test attribute "trigger_price"
     */
    public function testPropertyTriggerPrice()
    {
    }

    /**
     * Test attribute "disclosed_quantity"
     */
    public function testPropertyDisclosedQuantity()
    {
    }

    /**
     * Test attribute "transaction_type"
     */
    public function testPropertyTransactionType()
    {
    }

    /**
     * Test attribute "average_price"
     */
    public function testPropertyAveragePrice()
    {
    }

    /**
     * Test attribute "filled_quantity"
     */
    public function testPropertyFilledQuantity()
    {
    }

    /**
     * Test attribute "pending_quantity"
     */
    public function testPropertyPendingQuantity()
    {
    }

    /**
     * Test attribute "status_message"
     */
    public function testPropertyStatusMessage()
    {
    }

    /**
     * Test attribute "status_message_raw"
     */
    public function testPropertyStatusMessageRaw()
    {
    }

    /**
     * Test attribute "exchange_order_id"
     */
    public function testPropertyExchangeOrderId()
    {
    }

    /**
     * Test attribute "parent_order_id"
     */
    public function testPropertyParentOrderId()
    {
    }

    /**
     * Test attribute "order_id"
     */
    public function testPropertyOrderId()
    {
    }

    /**
     * Test attribute "variety"
     */
    public function testPropertyVariety()
    {
    }

    /**
     * Test attribute "order_timestamp"
     */
    public function testPropertyOrderTimestamp()
    {
    }

    /**
     * Test attribute "exchange_timestamp"
     */
    public function testPropertyExchangeTimestamp()
    {
    }

    /**
     * Test attribute "is_amo"
     */
    public function testPropertyIsAmo()
    {
    }

    /**
     * Test attribute "order_request_id"
     */
    public function testPropertyOrderRequestId()
    {
    }

    /**
     * Test attribute "order_ref_id"
     */
    public function testPropertyOrderRefId()
    {
    }
}
